package bfs;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class BFSExam2 {

	static final BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static int n,m;
	static int[][] graph;
	static boolean[][] visited;
	
	public static void main(String[] args) throws IOException {
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		n = Integer.parseInt(st.nextToken());
		m = Integer.parseInt(st.nextToken());
		
		graph = new int[n][m];
		visited = new boolean[n][m];

		for(int i=0; i<n; i++) {
			String input = br.readLine();
			for(int j=0; j<m; j++) {
				graph[i][m] = input.charAt(j)-'0';
			}
		}
		
		dfs(0, 0);
	}
	
	public static void dfs(int x, int y) {
		
		Queue<Location> q = new LinkedList<>();
		
		q.add(new Location(x, y));
		
		
		
	}
	
	
}

class Location{
	int x;
	int y;
	
	Location(int x, int y){
		this.x = x;
		this.y = y;
	}
}
